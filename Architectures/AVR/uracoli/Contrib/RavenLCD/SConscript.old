#   Copyright (c) 2010 Axel Wachtler
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions
#   are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#   * Neither the name of the authors nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.

# $Id$

#=== modules ==================================================================
import pprint, glob, os
Import("avr")

#=== setup build environment ==================================================
avrlocal = avr.Clone()

bdir=Dir(".").path


ccflags = avrlocal.Split("-Wall -Wundef -g$DBGFMT -Os -fshort-enums -fpack-struct -std=c99" )

current_ccflags = ccflags + \
                  [ "-DF_CPU=8000000UL",
                    "-mmcu=atmega3290p"]
current_linkflags=["-mmcu=atmega3290p", "-Wl,-u,vfprintf", "-Wl,-u,vfscanf"]
current_libs = ["printf_flt", "scanf_flt", "m"]

elf = avrlocal.Program('ravenlcd.elf',
                           avrlocal.Glob("*.c"),
                           CCFLAGS=current_ccflags,
                           LINKFLAGS=current_linkflags,
						   LIBS=current_libs
						   )
hex = avrlocal.Command('ravenlcd.hex', elf,
                       'avr-objcopy -O ihex $SOURCE $TARGET')

#=== install binaries =========================================================
inst_apps = avrlocal.Install("#install/bin",[hex,elf])

#=== main target of this SConscript ===========================================
avrlocal.Alias("ravlcd", inst_apps)

